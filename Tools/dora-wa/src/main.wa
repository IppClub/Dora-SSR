import "dora"

func init {
	s := "凹语言 x Dora"
	hello := "你好，凹语言！"
	dora.Println(hello, s)

	blend_func := dora.NewBlendFunc(dora.BlendFuncSrcColor, dora.BlendFuncInvSrcColor)
	dora.Println(blend_func.ToValue())

	cs := dora.NewCallStack()
	cs.Push(123)
	cs.Push("456")
	cs.Push(789)
	cs.Push(true)
	cs.Push(101.0)
	cs.Push(102.0)

	val := dora.NewValue("hello")
	str, ok := val.GetStr()
	if ok {
		dora.Println(str)
	}

	vec2 := dora.Vec2{X: 1.0, Y: 2.0}
	v1 := (vec2 + dora.Vec2{X: 3.0, Y: 4.0}) * 2.0
	cs.Push(v1)

	func_id: i32
	func_id = dora.PushFunction(func() {
		dora.Println("closure", vec2, v1, func_id)
	})
	dora.CallFunction(func_id)
	dora.DerefFunction(func_id)

	arr := dora.NewArray()
	dora.Println(arr.IsEmpty(), arr.GetCount())
	arr.Add(1)
	arr.Add("hello")
	arr.Add(true)
	arr.Add(101.0)
	arr.Add(102.0)
	arr.Add(dora.Vec2{X: 1.0, Y: 2.0})
	arr.Add(dora.Size{Width: 1.0, Height: 2.0})
	dora.Println(arr.Get(0))

	dict := dora.NewDictionary()
	dict.Set("hello", "world")
	dict.Set("foo", 123)
	dict.Set("bar", dora.Vec2{X: 1.0, Y: 2.0})
	dict.Set("baz", dora.Size{Width: 1.0, Height: 2.0})
	dora.Println(dict.Get("hello"))
	dora.Println(dict.Get("foo"))
	dora.Println(dict.Get("bar"))
	dora.Println(dict.Get("baz"))

	sprite := dora.NewSpriteWithFile("Image/logo.png")
	dora.Println(sprite.GetAnchor())
	sprite.SetUwrap(dora.TextureWrapClamp)
	sprite.SetFilter(dora.TextureFilterPoint)
	sprite.SetX(-200)
	sprite.SetScaleX(0.2)
	sprite.SetScaleY(0.2)
	sprite.SetAngle(90.0)
	sprite.SetColor(dora.Color{Color3: dora.Color3{R: 0, G: 255, B: 255}, A: 255})
	total: f64 = 0.0
	sprite.Schedule(func(delta_time: f64) => bool {
		total += delta_time
		dora.Println(total)
		if total >= 1.0 {
			return true
		}
		return false
	})
	sprite.PerformDef(
		dora.ActionDefSequence(
			&[]dora.ActionDef{
				dora.ActionDefMoveTo(
					1,
					dora.Vec2Zero,
					dora.Vec2{X: -200, Y: 0},
					dora.EaseOutInQuad,
				),
				dora.ActionDefMoveTo(
					1,
					dora.Vec2{X: -200, Y: 0},
					dora.Vec2Zero,
					dora.EaseOutInQuad,
				),
			},
		),
		true,
	)
}
