import "dora"

func all_clear() {
	dora.Director.Cleanup()
	dora.Cache.Unload()
	dora.EntityClear()
	dora.PlatformerData.Clear()
	dora.PlatformerUnitActionClear()
}

func init {
	dora.Director.SchedulePosted(func(_: f64) => bool {
		size := dora.App.GetVisualSize()
		dora.ImGui.SetNextWindowSizeOpts(
			dora.NewVec2(260, 300),
			dora.ImGuiCondFirstUseEver,
		)
		dora.ImGui.SetNextWindowPosOpts(
			dora.NewVec2(size.Width/2.0, size.Height/2.0),
			dora.ImGuiCondFirstUseEver,
			dora.NewVec2(0.5, 0.5),
		)
		dora.ImGui.BeginOpts("Wa Tests",
			dora.ImGuiWindowFlags(dora.ImGuiWindowNoSavedSettings),
			func() {
				button_size := dora.NewVec2(200, 0)
				if dora.ImGui.Button("Hello World", button_size) {
					all_clear()
					test_hello_world()
				}
				if dora.ImGui.Button("Quick Start", button_size) {
					all_clear()
					test_quick_start()
				}
				if dora.ImGui.Button("Body", button_size) {
					all_clear()
					test_body()
				}
				if dora.ImGui.Button("Entity Move", button_size) {
					all_clear()
					test_entity_move()
				}
				if dora.ImGui.Button("Contact", button_size) {
					all_clear()
					test_contact()
				}
				if dora.ImGui.Button("SQLite", button_size) {
					all_clear()
					test_sqlite()
				}
				if dora.ImGui.Button("Sprite", button_size) {
					all_clear()
					test_sprite()
				}
				if dora.ImGui.Button("Model", button_size) {
					all_clear()
					test_model()
				}
				if dora.ImGui.Button("Render Target", button_size) {
					all_clear()
					test_render_target()
				}
				if dora.ImGui.Button("VG Button", button_size) {
					all_clear()
					test_vg_button()
				}
				if dora.ImGui.Button("Layout", button_size) {
					all_clear()
					test_layout()
				}
				if dora.ImGui.Button("Excel Test", button_size) {
					all_clear()
					test_excel_test()
				}
			})
		return false
	})
}
