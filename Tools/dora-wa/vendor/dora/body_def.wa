/* Copyright (c) 2024 Li Jin, dragon-fly@qq.com

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */

#wa:import dora bodydef_type
func bodydef_type() => i32
#wa:import dora bodydef__set_type
func bodydef__set_type(slf: i64, val: i32)
#wa:import dora bodydef__get_type
func bodydef__get_type(slf: i64) => i32
#wa:import dora bodydef_set_position
func bodydef_set_position(slf: i64, val: i64);
#wa:import dora bodydef_get_position
func bodydef_get_position(slf: i64) => i64
#wa:import dora bodydef_set_angle
func bodydef_set_angle(slf: i64, val: f32);
#wa:import dora bodydef_get_angle
func bodydef_get_angle(slf: i64) => f32
#wa:import dora bodydef_set_face
func bodydef_set_face(slf: i64, val: i64);
#wa:import dora bodydef_get_face
func bodydef_get_face(slf: i64) => i64
#wa:import dora bodydef_set_face_pos
func bodydef_set_face_pos(slf: i64, val: i64);
#wa:import dora bodydef_get_face_pos
func bodydef_get_face_pos(slf: i64) => i64
#wa:import dora bodydef_set_linear_damping
func bodydef_set_linear_damping(slf: i64, val: f32);
#wa:import dora bodydef_get_linear_damping
func bodydef_get_linear_damping(slf: i64) => f32
#wa:import dora bodydef_set_angular_damping
func bodydef_set_angular_damping(slf: i64, val: f32);
#wa:import dora bodydef_get_angular_damping
func bodydef_get_angular_damping(slf: i64) => f32
#wa:import dora bodydef_set_linear_acceleration
func bodydef_set_linear_acceleration(slf: i64, val: i64);
#wa:import dora bodydef_get_linear_acceleration
func bodydef_get_linear_acceleration(slf: i64) => i64
#wa:import dora bodydef_set_fixed_rotation
func bodydef_set_fixed_rotation(slf: i64, val: i32);
#wa:import dora bodydef_is_fixed_rotation
func bodydef_is_fixed_rotation(slf: i64) => i32
#wa:import dora bodydef_set_bullet
func bodydef_set_bullet(slf: i64, val: i32);
#wa:import dora bodydef_is_bullet
func bodydef_is_bullet(slf: i64) => i32
#wa:import dora bodydef_polygon_with_center
func bodydef_polygon_with_center(center: i64, width: f32, height: f32, angle: f32, density: f32, friction: f32, restitution: f32) => i64
#wa:import dora bodydef_polygon
func bodydef_polygon(width: f32, height: f32, density: f32, friction: f32, restitution: f32) => i64
#wa:import dora bodydef_polygon_with_vertices
func bodydef_polygon_with_vertices(vertices: i64, density: f32, friction: f32, restitution: f32) => i64
#wa:import dora bodydef_attach_polygon_with_center
func bodydef_attach_polygon_with_center(slf: i64, center: i64, width: f32, height: f32, angle: f32, density: f32, friction: f32, restitution: f32)
#wa:import dora bodydef_attach_polygon
func bodydef_attach_polygon(slf: i64, width: f32, height: f32, density: f32, friction: f32, restitution: f32)
#wa:import dora bodydef_attach_polygon_with_vertices
func bodydef_attach_polygon_with_vertices(slf: i64, vertices: i64, density: f32, friction: f32, restitution: f32)
#wa:import dora bodydef_multi
func bodydef_multi(vertices: i64, density: f32, friction: f32, restitution: f32) => i64
#wa:import dora bodydef_attach_multi
func bodydef_attach_multi(slf: i64, vertices: i64, density: f32, friction: f32, restitution: f32)
#wa:import dora bodydef_disk_with_center
func bodydef_disk_with_center(center: i64, radius: f32, density: f32, friction: f32, restitution: f32) => i64
#wa:import dora bodydef_disk
func bodydef_disk(radius: f32, density: f32, friction: f32, restitution: f32) => i64
#wa:import dora bodydef_attach_disk_with_center
func bodydef_attach_disk_with_center(slf: i64, center: i64, radius: f32, density: f32, friction: f32, restitution: f32)
#wa:import dora bodydef_attach_disk
func bodydef_attach_disk(slf: i64, radius: f32, density: f32, friction: f32, restitution: f32)
#wa:import dora bodydef_chain
func bodydef_chain(vertices: i64, friction: f32, restitution: f32) => i64
#wa:import dora bodydef_attach_chain
func bodydef_attach_chain(slf: i64, vertices: i64, friction: f32, restitution: f32)
#wa:import dora bodydef_attach_polygon_sensor
func bodydef_attach_polygon_sensor(slf: i64, tag: i32, width: f32, height: f32)
#wa:import dora bodydef_attach_polygon_sensor_with_center
func bodydef_attach_polygon_sensor_with_center(slf: i64, tag: i32, center: i64, width: f32, height: f32, angle: f32)
#wa:import dora bodydef_attach_polygon_sensor_with_vertices
func bodydef_attach_polygon_sensor_with_vertices(slf: i64, tag: i32, vertices: i64)
#wa:import dora bodydef_attach_disk_sensor_with_center
func bodydef_attach_disk_sensor_with_center(slf: i64, tag: i32, center: i64, radius: f32)
#wa:import dora bodydef_attach_disk_sensor
func bodydef_attach_disk_sensor(slf: i64, tag: i32, radius: f32)
#wa:import dora bodydef_new
func bodydef_new() => i64