/* Copyright (c) 2024 Li Jin, dragon-fly@qq.com

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */

#wa:import dora grid_type
func grid_type() => i32
#wa:import dora grid_get_grid_x
func grid_get_grid_x(slf: i64) => i32
#wa:import dora grid_get_grid_y
func grid_get_grid_y(slf: i64) => i32
#wa:import dora grid_set_depth_write
func grid_set_depth_write(slf: i64, val: i32);
#wa:import dora grid_is_depth_write
func grid_is_depth_write(slf: i64) => i32
#wa:import dora grid__set_blend_func
func grid__set_blend_func(slf: i64, blend_func: i64)
#wa:import dora grid__get_blend_func
func grid__get_blend_func(slf: i64) => i64
#wa:import dora grid_set_effect
func grid_set_effect(slf: i64, val: i64);
#wa:import dora grid_get_effect
func grid_get_effect(slf: i64) => i64
#wa:import dora grid_set_texture_rect
func grid_set_texture_rect(slf: i64, val: i64);
#wa:import dora grid_get_texture_rect
func grid_get_texture_rect(slf: i64) => i64
#wa:import dora grid_set_texture
func grid_set_texture(slf: i64, val: i64);
#wa:import dora grid_get_texture
func grid_get_texture(slf: i64) => i64
#wa:import dora grid_set_pos
func grid_set_pos(slf: i64, x: i32, y: i32, pos: i64, z: f32)
#wa:import dora grid_get_pos
func grid_get_pos(slf: i64, x: i32, y: i32) => i64
#wa:import dora grid_set_color
func grid_set_color(slf: i64, x: i32, y: i32, color: i32)
#wa:import dora grid_get_color
func grid_get_color(slf: i64, x: i32, y: i32) => i32
#wa:import dora grid_move_uv
func grid_move_uv(slf: i64, x: i32, y: i32, offset: i64)
#wa:import dora grid_new
func grid_new(width: f32, height: f32, grid_x: i32, grid_y: i32) => i64
#wa:import dora grid_with_texture_rect
func grid_with_texture_rect(texture: i64, texture_rect: i64, grid_x: i32, grid_y: i32) => i64
#wa:import dora grid_with_texture
func grid_with_texture(texture: i64, grid_x: i32, grid_y: i32) => i64
#wa:import dora grid_with_file
func grid_with_file(clip_str: i64, grid_x: i32, grid_y: i32) => i64
type Grid struct { Node }
func GridFrom(raw: i64) => *Grid {
	if raw == 0 {
		return nil
	}
	object := Grid{}
	object.raw = &raw
	setFinalizer(object.raw, ObjectFinalizer)
	result := &object
	return result
}
func Grid.GetTypeId() => i32 {
	return grid_type()
}
func Grid.GetGridX() => i32 {
	return grid_get_grid_x(*this.raw)
}
func Grid.GetGridY() => i32 {
	return grid_get_grid_y(*this.raw)
}
func Grid.SetDepthWrite(val: bool) {
	grid_set_depth_write(*this.raw, ToDoraBool(val))
}
func Grid.IsDepthWrite() => bool {
	return grid_is_depth_write(*this.raw) != 0
}
func Grid.SetBlendFunc(blend_func: BlendFunc) {
	grid__set_blend_func(*this.raw, blend_func.ToValue())
}
func Grid.GetBlendFunc() => BlendFunc {
	return BlendFuncFrom(grid__get_blend_func(*this.raw))
}
func Grid.SetEffect(val: SpriteEffect) {
	grid_set_effect(*this.raw, val.GetRaw())
}
func Grid.GetEffect() => SpriteEffect {
	return *SpriteEffectFrom(grid_get_effect(*this.raw))
}
func Grid.SetTextureRect(val: Rect) {
	grid_set_texture_rect(*this.raw, val.GetRaw())
}
func Grid.GetTextureRect() => Rect {
	return *RectFrom(grid_get_texture_rect(*this.raw))
}
func Grid.SetTexture(val: Texture2D) {
	grid_set_texture(*this.raw, val.GetRaw())
}
func Grid.GetTexture() => *Texture2D {
	ptr_ := grid_get_texture(*this.raw)
	if ptr_ == 0 {
		return nil
	}
	obj_ := *Texture2DFrom(ptr_)
	return &obj_
}
func Grid.SetPos(x: i32, y: i32, pos: Vec2, z: f32) {
	grid_set_pos(*this.raw, x, y, pos.ToValue(), z)
}
func Grid.GetPos(x: i32, y: i32) => Vec2 {
	return Vec2FromValue(grid_get_pos(*this.raw, x, y))
}
func Grid.SetColor(x: i32, y: i32, color: Color) {
	grid_set_color(*this.raw, x, y, color.ToARGB())
}
func Grid.GetColor(x: i32, y: i32) => Color {
	return ColorFromARGB(grid_get_color(*this.raw, x, y))
}
func Grid.MoveUv(x: i32, y: i32, offset: Vec2) {
	grid_move_uv(*this.raw, x, y, offset.ToValue())
}
func NewGrid(width: f32, height: f32, grid_x: i32, grid_y: i32) => Grid {
	raw := grid_new(width, height, grid_x, grid_y)
	object := Grid{}
	object.raw = &raw
	setFinalizer(object.raw, ObjectFinalizer)
	return object
}
func NewGridWithTextureRect(texture: Texture2D, texture_rect: Rect, grid_x: i32, grid_y: i32) => Grid {
	raw := grid_with_texture_rect(texture.GetRaw(), texture_rect.GetRaw(), grid_x, grid_y)
	object := Grid{}
	object.raw = &raw
	setFinalizer(object.raw, ObjectFinalizer)
	return object
}
func NewGridWithTexture(texture: Texture2D, grid_x: i32, grid_y: i32) => Grid {
	raw := grid_with_texture(texture.GetRaw(), grid_x, grid_y)
	object := Grid{}
	object.raw = &raw
	setFinalizer(object.raw, ObjectFinalizer)
	return object
}
func NewGridWithFile(clip_str: string, grid_x: i32, grid_y: i32) => *Grid {
	raw := grid_with_file(ToDoraString(clip_str), grid_x, grid_y)
	if raw == 0 {
		return nil
	}
	object := Grid{}
	object.raw = &raw
	setFinalizer(object.raw, ObjectFinalizer)
	return &object
}