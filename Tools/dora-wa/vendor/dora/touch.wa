/* Copyright (c) 2024 Li Jin, dragon-fly@qq.com

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */

#wa:import dora touch_type
func touch_type() => i32
#wa:import dora touch_set_enabled
func touch_set_enabled(slf: i64, val: i32);
#wa:import dora touch_is_enabled
func touch_is_enabled(slf: i64) => i32
#wa:import dora touch_is_first
func touch_is_first(slf: i64) => i32
#wa:import dora touch_get_id
func touch_get_id(slf: i64) => i32
#wa:import dora touch_get_delta
func touch_get_delta(slf: i64) => i64
#wa:import dora touch_get_location
func touch_get_location(slf: i64) => i64
#wa:import dora touch_get_world_location
func touch_get_world_location(slf: i64) => i64
type Touch struct { Object }
func TouchFrom(raw: i64) => *Touch {
	if raw == 0 {
		return nil
	}
	ObjectRetain(raw)
	object := Touch{}
	object.raw = &raw
	setFinalizer(object.raw, ObjectFinalizer)
	result := &object
	return result
}
func Touch.GetTypeId() => i32 {
	return touch_type()
}
func ObjectAsTouch(object: Object) => *Touch {
	if object.GetTypeId() == touch_type() {
		return TouchFrom(object.GetRaw())
	}
	return nil
}
func Touch.SetEnabled(val: bool) {
	touch_set_enabled(*this.raw, ToDoraBool(val))
}
func Touch.IsEnabled() => bool {
	return touch_is_enabled(*this.raw) != 0
}
func Touch.IsFirst() => bool {
	return touch_is_first(*this.raw) != 0
}
func Touch.GetId() => i32 {
	return touch_get_id(*this.raw)
}
func Touch.GetDelta() => Vec2 {
	return Vec2FromValue(touch_get_delta(*this.raw))
}
func Touch.GetLocation() => Vec2 {
	return Vec2FromValue(touch_get_location(*this.raw))
}
func Touch.GetWorldLocation() => Vec2 {
	return Vec2FromValue(touch_get_world_location(*this.raw))
}