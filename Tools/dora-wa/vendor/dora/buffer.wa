/* Copyright (c) 2024 Li Jin, dragon-fly@qq.com

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */

#wa:import dora buffer_type
func buffer_type() => i32
#wa:import dora buffer_set_text
func buffer_set_text(slf: i64, val: i64);
#wa:import dora buffer_get_text
func buffer_get_text(slf: i64) => i64
#wa:import dora buffer_resize
func buffer_resize(slf: i64, size: i32)
#wa:import dora buffer_zero_memory
func buffer_zero_memory(slf: i64)
#wa:import dora buffer_get_size
func buffer_get_size(slf: i64) => i32
type Buffer struct { Object }
func BufferFrom(raw: i64) => *Buffer {
	if raw == 0 {
		return nil
	}
	object := Buffer{}
	object.raw = &raw
	setFinalizer(object.raw, ObjectFinalizer)
	result := &object
	return result
}
func Buffer.GetTypeId() => i32 {
	return buffer_type()
}
func ObjectAsBuffer(object: Object) => *Buffer {
	if object.GetTypeId() == buffer_type() {
		return BufferFrom(object.GetRaw())
	}
	return nil
}
func Buffer.SetText(val: string) {
	buffer_set_text(*this.raw, ToDoraString(val))
}
func Buffer.GetText() => string {
	return FromDoraString(buffer_get_text(*this.raw))
}
func Buffer.Resize(size: i32) {
	buffer_resize(*this.raw, size)
}
func Buffer.ZeroMemory() {
	buffer_zero_memory(*this.raw)
}
func Buffer.GetSize() => i32 {
	return buffer_get_size(*this.raw)
}