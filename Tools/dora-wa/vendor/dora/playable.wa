/* Copyright (c) 2024 Li Jin, dragon-fly@qq.com

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */

#wa:import dora playable_type
func playable_type() => i32
#wa:import dora playable_set_look
func playable_set_look(slf: i64, val: i64);
#wa:import dora playable_get_look
func playable_get_look(slf: i64) => i64
#wa:import dora playable_set_speed
func playable_set_speed(slf: i64, val: f32);
#wa:import dora playable_get_speed
func playable_get_speed(slf: i64) => f32
#wa:import dora playable_set_recovery
func playable_set_recovery(slf: i64, val: f32);
#wa:import dora playable_get_recovery
func playable_get_recovery(slf: i64) => f32
#wa:import dora playable_set_fliped
func playable_set_fliped(slf: i64, val: i32);
#wa:import dora playable_is_fliped
func playable_is_fliped(slf: i64) => i32
#wa:import dora playable_get_current
func playable_get_current(slf: i64) => i64
#wa:import dora playable_get_last_completed
func playable_get_last_completed(slf: i64) => i64
#wa:import dora playable_get_key
func playable_get_key(slf: i64, name: i64) => i64
#wa:import dora playable_play
func playable_play(slf: i64, name: i64, looping: i32) => f32
#wa:import dora playable_stop
func playable_stop(slf: i64)
#wa:import dora playable_set_slot
func playable_set_slot(slf: i64, name: i64, item: i64)
#wa:import dora playable_get_slot
func playable_get_slot(slf: i64, name: i64) => i64
#wa:import dora playable_new
func playable_new(filename: i64) => i64