/* Copyright (c) 2024 Li Jin, dragon-fly@qq.com

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */

#wa:import dora motorjoint_type
func motorjoint_type() => i32
#wa:import dora motorjoint_set_enabled
func motorjoint_set_enabled(slf: i64, val: i32);
#wa:import dora motorjoint_is_enabled
func motorjoint_is_enabled(slf: i64) => i32
#wa:import dora motorjoint_set_force
func motorjoint_set_force(slf: i64, val: f32);
#wa:import dora motorjoint_get_force
func motorjoint_get_force(slf: i64) => f32
#wa:import dora motorjoint_set_speed
func motorjoint_set_speed(slf: i64, val: f32);
#wa:import dora motorjoint_get_speed
func motorjoint_get_speed(slf: i64) => f32
type MotorJoint struct { Joint }
func MotorJointFrom(raw: i64) => *MotorJoint {
	if raw == 0 {
		return nil
	}
	object := MotorJoint{}
	object.raw = &raw
	setFinalizer(object.raw, ObjectFinalizer)
	result := &object
	return result
}
func MotorJoint.GetTypeId() => i32 {
	return motorjoint_type()
}
func MotorJoint.SetEnabled(val: bool) {
	motorjoint_set_enabled(*this.raw, ToDoraBool(val))
}
func MotorJoint.IsEnabled() => bool {
	return motorjoint_is_enabled(*this.raw) != 0
}
func MotorJoint.SetForce(val: f32) {
	motorjoint_set_force(*this.raw, val)
}
func MotorJoint.GetForce() => f32 {
	return motorjoint_get_force(*this.raw)
}
func MotorJoint.SetSpeed(val: f32) {
	motorjoint_set_speed(*this.raw, val)
}
func MotorJoint.GetSpeed() => f32 {
	return motorjoint_get_speed(*this.raw)
}