/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
*/

// @ts-check

/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
const sidebars = {
	// By default, Docusaurus generates a sidebar from the docs folder structure
	tutorialSidebar: [{type: 'autogenerated', dirName: 'tutorial'}],
	apiSidebar: [
		{
			type: 'doc',
			label: 'Dora SSR API Reference',
			id: 'api/intro',
		},
		{
			type: 'category',
			label: 'Basic Functionality',
			items: [
				{
					type: 'doc',
					label: 'App',
					id: 'api/Class/App',
				},
				{
					type: 'doc',
					label: 'View',
					id: 'api/Class/View',
				},
				{
					type: 'doc',
					label: 'Profiler',
					id: 'api/Class Object/Profiler',
				},
				{
					type: 'doc',
					label: 'Object',
					id: 'api/Class/Object',
				},
				{
					type: 'doc',
					label: 'Object Class',
					id: 'api/Class Object/Object',
				},
				{
					type: 'category',
					label: 'Audio Menagement',
					items: [
						{
							type: 'doc',
							label: 'Audio',
							id: 'api/Class/Audio',
						},
						{
							type: 'doc',
							label: 'AudioBus',
							id: 'api/Class/AudioBus',
						},
						{
							type: 'doc',
							label: 'AudioBus Class',
							id: 'api/Class Object/AudioBus',
						},
						{
							type: 'doc',
							label: 'AudioSource',
							id: 'api/Class/AudioSource',
						},
						{
							type: 'doc',
							label: 'AudioSource Class',
							id: 'api/Class Object/AudioSource',
						},
					]
				},
				{
					type: 'category',
					label: 'Assets Management',
					items: [
						{
							type: 'doc',
							label: 'Content',
							id: 'api/Class/Content',
						},
						{
							type: 'doc',
							label: 'Path',
							id: 'api/Class/Path',
						},
						{
							type: 'doc',
							label: 'Cache',
							id: 'api/Class/Cache',
						},
						{
							type: 'doc',
							label: 'DB',
							id: 'api/Class/DB',
						},
					]
				},
				{
					type: 'category',
					label: 'Input Management',
					items: [
						{
							type: 'doc',
							label: 'Trigger',
							id: 'api/Class/InputManager/Trigger',
						},
						{
							type: 'doc',
							label: 'InputManager',
							id: 'api/Class/InputManager',
						},
						{
							type: 'doc',
							label: 'InputManager Class',
							id: 'api/Class Object/InputManager',
						},
						{
							type: 'category',
							label: 'GamePad Props',
							items: [
								"api/Class/InputManager/TriggerPadProps",
								"api/Class/InputManager/ControlPadProps",
								"api/Class/InputManager/DPadProps",
								"api/Class/InputManager/ButtonPadProps",
								"api/Class/InputManager/JoyStickProps",
								"api/Class/InputManager/GamePadProps",
							]
						},
						{
							type: 'doc',
							label: 'Keyboard',
							id: 'api/Class/Keyboard',
						},
						{
							type: 'doc',
							label: 'Mouse',
							id: 'api/Class/Mouse',
						},
						{
							type: 'doc',
							label: 'Controller',
							id: 'api/Class/Controller',
						},
					]
				},
				{
					type: 'category',
					label: 'Data Structure',
					items: [
						{
							type: 'doc',
							label: 'Array',
							id: 'api/Class/Array',
						},
						{
							type: 'doc',
							label: 'Array Class',
							id: 'api/Class Object/Array',
						},
						{
							type: 'doc',
							label: 'Array Item',
							id: "api/Module/Array",
						},
						{
							type: 'doc',
							label: 'Dictionary',
							id: 'api/Class/Dictionary',
						},
						{
							type: 'doc',
							label: 'Dictionary Class',
							id: 'api/Class Object/Dictionary',
						},
						{
							type: 'doc',
							label: 'ContainerItem',
							id: "api/Class/ContainerItem",
						},
						{
							type: 'doc',
							label: 'Vec2',
							id: 'api/Class/Vec2',
						},
						{
							type: 'doc',
							label: 'Vec2 Class',
							id: 'api/Class Object/Vec2',
						},
						{
							type: 'doc',
							label: 'Size',
							id: 'api/Class/Size',
						},
						{
							type: 'doc',
							label: 'Size Class',
							id: 'api/Class Object/Size',
						},
						{
							type: 'doc',
							label: 'Rect',
							id: 'api/Class/Rect',
						},
						{
							type: 'doc',
							label: 'Rect Class',
							id: 'api/Class Object/Rect',
						},
						{
							type: 'doc',
							label: 'Color',
							id: 'api/Class/Color',
						},
						{
							type: 'doc',
							label: 'Color Class',
							id: 'api/Class Object/Color',
						},
						{
							type: 'doc',
							label: 'Color3',
							id: 'api/Class/Color3',
						},
						{
							type: 'doc',
							label: 'Color3 Class',
							id: 'api/Class Object/Color3',
						},
					]
				},
			]
		},
		{
			type: 'category',
			label: 'Scene Management',
			items: [
				{
					type: 'category',
					label: 'Tree Management',
					items: [
						{
							type: 'doc',
							label: 'Director',
							id: 'api/Class/Director',
						},
						{
							type: 'doc',
							label: 'Scheduler',
							id: 'api/Class/Scheduler',
						},
						{
							type: 'doc',
							label: 'Scheduler Class',
							id: 'api/Class Object/Scheduler',
						},
						{
							type: 'doc',
							label: 'Camera',
							id: 'api/Class/Camera',
						},
						{
							type: 'doc',
							label: 'Camera2D',
							id: 'api/Class/Camera2D',
						},
						{
							type: 'doc',
							label: 'Camera2D Class',
							id: 'api/Class Object/Camera2D',
						},
						{
							type: 'doc',
							label: 'CameraOtho',
							id: 'api/Class/CameraOtho',
						},
						{
							type: 'doc',
							label: 'CameraOtho Class',
							id: 'api/Class Object/CameraOtho',
						},
					]
				},
				{
					type: 'category',
					label: 'Tree Nodes',
					items: [
						{
							type: 'doc',
							label: 'Node',
							id: 'api/Class/Node',
						},
						{
							type: 'doc',
							label: 'Node Class',
							id: 'api/Class Object/Node',
						},
						{
							type: 'doc',
							label: 'AlignNode',
							id: 'api/Class/AlignNode',
						},
						{
							type: 'doc',
							label: 'AlignNode Class',
							id: 'api/Class Object/AlignNode',
						},
						{
							type: 'doc',
							label: 'Menu',
							id: 'api/Class/Menu',
						},
						{
							type: 'doc',
							label: 'Menu Class',
							id: 'api/Class Object/Menu',
						},
						{
							type: 'doc',
							label: 'Touch',
							id: 'api/Class/Touch',
						},
						{
							type: 'doc',
							label: 'Touch Class',
							id: 'api/Class Object/Touch',
						},
						{
							type: 'doc',
							label: 'Slot',
							id: 'api/Class/Slot',
						},
						{
							type: 'doc',
							label: 'GSlot',
							id: 'api/Class/GSlot',
						},
						{
							type: 'doc',
							label: 'emit',
							id: 'api/Module/emit',
						},
					]
				},
			]
		},
		{
			type: 'category',
			label: 'Event Management',
			items: [
				{
					type: 'category',
					label: 'Global Events',
					items: [
						{
							type: 'doc',
							label: 'App Event',
							id: 'api/Global Event/App',
						},
					]
				},
				{
					type: 'category',
					label: 'Node Events',
					items: [
						{
							type: 'doc',
							label: 'Node Event',
							id: 'api/Node Event/Node',
						},
						{
							type: 'doc',
							label: 'Body Event',
							id: 'api/Node Event/Body',
						},
						{
							type: 'doc',
							label: 'Playable Event',
							id: 'api/Node Event/Playable',
						},
						{
							type: 'doc',
							label: 'Particle Event',
							id: 'api/Node Event/Particle',
						},
						{
							type: 'doc',
							label: 'AlignNode Event',
							id: 'api/Node Event/AlignNode',
						},
						{
							type: 'doc',
							label: 'EffekNode Event',
							id: 'api/Node Event/EffekNode',
						},
					]
				},
			]
		},
		{
			type: 'category',
			label: 'Graphics Rendering',
			items: [
				{
					type: 'category',
					label: 'Render Nodes',
					items: [
						{
							type: 'doc',
							label: 'Sprite',
							id: 'api/Class/Sprite',
						},
						{
							type: 'doc',
							label: 'Sprite Class',
							id: 'api/Class Object/Sprite',
						},
						{
							type: 'doc',
							label: 'Grid',
							id: "api/Class/Grid",
						},
						{
							type: 'doc',
							label: 'Grid Class',
							id: "api/Class Object/Grid",
						},
						{
							type: 'doc',
							label: 'Line',
							id: 'api/Class/Line',
						},
						{
							type: 'doc',
							label: 'Line Class',
							id: 'api/Class Object/Line',
						},
						{
							type: 'doc',
							label: 'DrawNode',
							id: 'api/Class/DrawNode',
						},
						{
							type: 'doc',
							label: 'DrawNode Class',
							id: 'api/Class Object/DrawNode',
						},
						{
							type: 'doc',
							label: 'ClipNode',
							id: 'api/Class/ClipNode',
						},
						{
							type: 'doc',
							label: 'ClipNode Class',
							id: 'api/Class Object/ClipNode',
						},
						{
							type: 'doc',
							label: 'Label',
							id: 'api/Class/Label',
						},
						{
							type: 'doc',
							label: 'Label Class',
							id: 'api/Class Object/Label',
						},
						{
							type: 'doc',
							label: 'EffekNode',
							id: 'api/Class/EffekNode',
						},
						{
							type: 'doc',
							label: 'EffekNode Class',
							id: 'api/Class Object/EffekNode',
						},
						{
							type: 'doc',
							label: 'TileNode',
							id: 'api/Class/TileNode',
						},
						{
							type: 'doc',
							label: 'TileNode Class',
							id: 'api/Class Object/TileNode',
						},
						{
							type: 'doc',
							label: 'VGNode',
							id: 'api/Class/VGNode',
						},
						{
							type: 'doc',
							label: 'VGNode Class',
							id: 'api/Class Object/VGNode',
						},
						{
							type: 'doc',
							label: 'SVG',
							id: 'api/Class/SVG',
						},
						{
							type: 'doc',
							label: 'SVG Class',
							id: 'api/Class Object/SVG',
						},
						{
							type: 'doc',
							label: 'Particle',
							id: 'api/Class/Particle',
						},
						{
							type: 'doc',
							label: 'Particle Class',
							id: 'api/Class Object/Particle',
						},
					]
				},
				{
					type: 'category',
					label: 'Render Objects',
					items: [
						{
							type: 'doc',
							label: 'Texture2D',
							id: 'api/Class/Texture2D',
						},
						{
							type: 'doc',
							label: 'Texture2D Class',
							id: 'api/Class Object/Texture2D',
						},
						{
							type: 'doc',
							label: 'BlendFunc',
							id: 'api/Class/BlendFunc',
						},
						{
							type: 'doc',
							label: 'BlendFunc Class',
							id: 'api/Class Object/BlendFunc',
						},
						{
							type: 'doc',
							label: 'Effect',
							id: 'api/Class/Effect',
						},
						{
							type: 'doc',
							label: 'Effect Class',
							id: 'api/Class Object/Effect',
						},
						{
							type: 'doc',
							label: 'SpriteEffect',
							id: 'api/Class/SpriteEffect',
						},
						{
							type: 'doc',
							label: 'SpriteEffect Class',
							id: 'api/Class Object/SpriteEffect',
						},
						{
							type: 'doc',
							label: 'Pass',
							id: 'api/Class/Pass',
						},
						{
							type: 'doc',
							label: 'Pass Class',
							id: 'api/Class Object/Pass',
						},
						{
							type: 'doc',
							label: 'RenderTarget',
							id: 'api/Class/RenderTarget',
						},
						{
							type: 'doc',
							label: 'RenderTarget Class',
							id: 'api/Class Object/RenderTarget',
						},
						{
							type: 'doc',
							label: 'Grabber',
							id: 'api/Class/Node/Grabber',
						},
					]
				},
				{
					type: 'category',
					label: 'Animation Models',
					items: [
						{
							type: 'doc',
							label: 'Playable',
							id: 'api/Class/Playable',
						},
						{
							type: 'doc',
							label: 'Playable Class',
							id: 'api/Class Object/Playable',
						},
						{
							type: 'doc',
							label: 'Model',
							id: 'api/Class/Model',
						},
						{
							type: 'doc',
							label: 'Model Class',
							id: 'api/Class Object/Model',
						},
						{
							type: 'doc',
							label: 'DragonBone',
							id: 'api/Class/DragonBone',
						},
						{
							type: 'doc',
							label: 'DragonBone Class',
							id: 'api/Class Object/DragonBone',
						},
						{
							type: 'doc',
							label: 'Spine',
							id: 'api/Class/Spine',
						},
						{
							type: 'doc',
							label: 'Spine Class',
							id: 'api/Class Object/Spine',
						},
					]
				}
			]
		},
		{
			type: 'category',
			label: 'Node Actions',
			items: [
				{
					type: 'doc',
					label: 'Action',
					id: 'api/Class/Action',
				},
				{
					type: 'doc',
					label: 'Action Class',
					id: 'api/Class Object/Action',
				},
				{
					type: 'doc',
					label: 'Ease',
					id: 'api/Class/Ease',
				},
				{
					type: 'doc',
					label: 'EaseFunc',
					id: "api/Class/Ease/EaseFunc",
				},
				{
					type: 'doc',
					label: 'Move',
					id: 'api/Module/Move',
				},
				{
					type: 'doc',
					label: 'X',
					id: 'api/Module/X',
				},
				{
					type: 'doc',
					label: 'Y',
					id: 'api/Module/Y',
				},
				{
					type: 'doc',
					label: 'Z',
					id: 'api/Module/Z',
				},
				{
					type: 'doc',
					label: 'Angle',
					id: 'api/Module/Angle',
				},
				{
					type: 'doc',
					label: 'AngleX',
					id: 'api/Module/AngleX',
				},
				{
					type: 'doc',
					label: 'AngleY',
					id: 'api/Module/AngleY',
				},
				{
					type: 'doc',
					label: 'Roll',
					id: 'api/Module/Roll',
				},
				{
					type: 'doc',
					label: 'Scale',
					id: 'api/Module/Scale',
				},
				{
					type: 'doc',
					label: 'ScaleX',
					id: 'api/Module/ScaleX',
				},
				{
					type: 'doc',
					label: 'ScaleY',
					id: 'api/Module/ScaleY',
				},
				{
					type: 'doc',
					label: 'SkewX',
					id: 'api/Module/SkewX',
				},
				{
					type: 'doc',
					label: 'SkewY',
					id: 'api/Module/SkewY',
				},
				{
					type: 'doc',
					label: 'Opacity',
					id: 'api/Module/Opacity',
				},
				{
					type: 'doc',
					label: 'Height',
					id: 'api/Module/Height',
				},
				{
					type: 'doc',
					label: 'Width',
					id: 'api/Module/Width',
				},
				{
					type: 'doc',
					label: 'Frame',
					id: 'api/Module/Frame',
				},
				{
					type: 'doc',
					label: 'Sequence',
					id: 'api/Module/Sequence',
				},
				{
					type: 'doc',
					label: 'Spawn',
					id: 'api/Module/Spawn',
				},
				{
					type: 'doc',
					label: 'Delay',
					id: 'api/Module/Delay',
				},
				{
					type: 'doc',
					label: 'Event',
					id: 'api/Module/Event',
				},
				{
					type: 'doc',
					label: 'Show',
					id: 'api/Module/Show',
				},
				{
					type: 'doc',
					label: 'Hide',
					id: 'api/Module/Hide',
				},
				{
					type: 'doc',
					label: 'AnchorX',
					id: 'api/Module/AnchorX',
				},
				{
					type: 'doc',
					label: 'AnchorY',
					id: 'api/Module/AnchorY',
				},
			]
		},
		{
			type: 'category',
			label: 'Physics Simulation',
			items: [
				{
					type: 'doc',
					label: 'PhysicsWorld',
					id: 'api/Class/PhysicsWorld',
				},
				{
					type: 'doc',
					label: 'PhysicsWorld Class',
					id: 'api/Class Object/PhysicsWorld',
				},
				{
					type: 'doc',
					label: 'BodyDef',
					id: 'api/Class/BodyDef',
				},
				{
					type: 'doc',
					label: 'BodyDef Class',
					id: 'api/Class Object/BodyDef',
				},
				{
					type: 'doc',
					label: 'Body',
					id: 'api/Class/Body',
				},
				{
					type: 'doc',
					label: 'Body Class',
					id: 'api/Class Object/Body',
				},
				{
					type: 'doc',
					label: 'Sensor',
					id: 'api/Class/Sensor',
				},
				{
					type: 'doc',
					label: 'Sensor Class',
					id: 'api/Class Object/Sensor',
				},
				{
					type: 'doc',
					label: 'FixtureDef',
					id: 'api/Class/FixtureDef',
				},
				{
					type: 'doc',
					label: 'FixtureDef Class',
					id: 'api/Class Object/FixtureDef',
				},
				{
					type: 'doc',
					label: 'JointDef',
					id: 'api/Class/JointDef',
				},
				{
					type: 'doc',
					label: 'JointDef Class',
					id: 'api/Class Object/JointDef',
				},
				{
					type: 'doc',
					label: 'Joint',
					id: 'api/Class/Joint',
				},
				{
					type: 'doc',
					label: 'Joint Class',
					id: 'api/Class Object/Joint',
				},
				{
					type: 'doc',
					label: 'MoveJoint',
					id: 'api/Class/MoveJoint',
				},
				{
					type: 'doc',
					label: 'MotorJoint',
					id: 'api/Class/MotorJoint',
				},
			]
		},
		{
			type: 'category',
			label: 'ECS Framework',
			items: [
				{
					type: 'doc',
					label: 'Entity',
					id: 'api/Class/Entity',
				},
				{
					type: 'doc',
					label: 'Entity Class',
					id: 'api/Class Object/Entity',
				},
				{
					type: 'doc',
					label: 'Group',
					id: 'api/Class/Group',
				},
				{
					type: 'doc',
					label: 'Group Class',
					id: 'api/Class Object/Group',
				},
				{
					type: 'doc',
					label: 'Observer',
					id: 'api/Class/Observer',
				},
				{
					type: 'doc',
					label: 'Observer Class',
					id: 'api/Class Object/Observer',
				},
			]
		},
		{
			type: 'category',
			label: 'Platformer Game Framework',
			items: [
				{
					type: 'doc',
					label: 'Platformer Module',
					id: "api/Module/Platformer",
				},
				{
					type: 'doc',
					label: 'Behavior',
					id: 'api/Class/Platformer/Behavior',
				},
				{
					type: 'doc',
					label: 'Behavior Leaf',
					id: 'api/Class/Platformer/Behavior/Leaf',
				},
				{
					type: 'doc',
					label: 'Blackboard',
					id: 'api/Class/Platformer/Behavior/Blackboard',
				},
				{
					type: 'doc',
					label: 'Decision',
					id: 'api/Class/Platformer/Decision',
				},
				{
					type: 'doc',
					label: 'Decision Leaf',
					id: 'api/Class/Platformer/Decision/Leaf',
				},
				{
					type: 'doc',
					label: 'AI',
					id: 'api/Class/Platformer/AI',
				},
				{
					type: 'doc',
					label: 'Data',
					id: 'api/Class/Platformer/Data',
				},
				{
					type: 'doc',
					label: 'PlatformCamera',
					id: 'api/Class/Platformer/PlatformCamera',
				},
				{
					type: 'doc',
					label: 'PlatformCamera Class',
					id: 'api/Class Object/Platformer/PlatformCamera',
				},
				{
					type: 'doc',
					label: 'PlatformWorld',
					id: 'api/Class/Platformer/PlatformWorld',
				},
				{
					type: 'doc',
					label: 'TargetAllow',
					id: 'api/Class/Platformer/TargetAllow',
				},
				{
					type: 'doc',
					label: 'TargetAllow Class',
					id: 'api/Class Object/Platformer/TargetAllow',
				},
				{
					type: 'doc',
					label: 'UnitAction',
					id: 'api/Class/Platformer/UnitAction',
				},
				{
					type: 'doc',
					label: 'UnitAction Class',
					id: 'api/Class Object/Platformer/UnitAction',
				},
				{
					type: 'doc',
					label: 'UnitActionParam',
					id: 'api/Class/Platformer/UnitActionParam',
				},
				{
					type: 'doc',
					label: 'Unit',
					id: 'api/Class/Platformer/Unit',
				},
				{
					type: 'doc',
					label: 'Unit Class',
					id: 'api/Class Object/Platformer/Unit',
				},
				{
					type: 'doc',
					label: 'BulletDef',
					id: 'api/Class/Platformer/BulletDef',
				},
				{
					type: 'doc',
					label: 'BulletDef Class',
					id: 'api/Class Object/Platformer/BulletDef',
				},
				{
					type: 'doc',
					label: 'Bullet',
					id: 'api/Class/Platformer/Bullet',
				},
				{
					type: 'doc',
					label: 'Bullet Class',
					id: 'api/Class Object/Platformer/Bullet',
				},
				{
					type: 'doc',
					label: 'Face',
					id: 'api/Class/Platformer/Face',
				},
				{
					type: 'doc',
					label: 'Face Class',
					id: 'api/Class Object/Platformer/Face',
				},
				{
					type: 'doc',
					label: 'Visual',
					id: 'api/Class/Platformer/Visual',
				},
				{
					type: 'doc',
					label: 'Visual Class',
					id: 'api/Class Object/Platformer/Visual',
				},
			]
		},
		{
			type: 'category',
			label: 'Coroutine Management',
			items: [
				{
					type: 'doc',
					label: 'Routine',
					id: 'api/Class/Routine',
				},
				{
					type: 'doc',
					label: 'thread',
					id: 'api/Module/thread',
				},
				{
					type: 'doc',
					label: 'threadLoop',
					id: 'api/Module/threadLoop',
				},
				{
					type: 'doc',
					label: 'once',
					id: 'api/Module/once',
				},
				{
					type: 'doc',
					label: 'loop',
					id: 'api/Module/loop',
				},
				{
					type: 'doc',
					label: 'cycle',
					id: 'api/Module/cycle',
				},
				{
					type: 'doc',
					label: 'sleep',
					id: 'api/Module/sleep',
				},
				{
					type: 'doc',
					label: 'wait',
					id: 'api/Module/wait',
				},
			]
		},
		{
			type: 'category',
			label: 'Machine Learning Algorithms',
			items: [
				{
					type: 'doc',
					label: 'ML',
					id: 'api/Class/ML',
				},
				{
					type: 'link',
					label: 'C4.5',
					href: '/docs/api/Class/ML#builddecisiontreeasync',
				},
				{
					type: 'doc',
					label: 'Q-learning',
					id: 'api/Class/QLearner',
				},
				{
					type: 'doc',
					label: 'Q-learning Class',
					id: 'api/Class Object/QLearner',
				},
			]
		},
		{
			type: 'category',
			label: 'Dialogue System',
			items: [
				{
					type: 'doc',
					label: 'YarnRunner',
					id: 'api/Class/YarnRunner',
				},
				{
					type: 'doc',
					label: 'TextResult',
					id: 'api/Class/YarnRunner/TextResult',
				},
				{
					type: 'doc',
					label: 'OptionResult',
					id: 'api/Class/YarnRunner/OptionResult',
				},
				{
					type: 'doc',
					label: 'Markup',
					id: 'api/Class/YarnRunner/Markup',
				},
			]
		},
		{
			type: 'category',
			label: 'Networking Service',
			items: [
				{
					type: 'doc',
					label: 'Request',
					id: 'api/Class/Request',
				},
				{
					type: 'doc',
					label: 'HttpClient',
					id: 'api/Class/HttpClient',
				},
				{
					type: 'doc',
					label: 'HttpServer',
					id: 'api/Class/HttpServer',
				},
			]
		},
		{
			type: 'category',
			label: 'Misc Functions',
			items: [
				"api/Module/Dora",
				"api/Module/p",
				"api/Class/Buffer",
				"api/Class Object/Buffer",
				"api/Class/tolua",
				"api/Class/json",
				"api/Class/Wasm",
				"api/Module/Log",
				{
					type: 'category',
					label: 'YueScript',
					items: [
						{
							type: 'doc',
							label: 'yue',
							id: 'api/Class/yue',
						},
						{
							type: 'doc',
							label: 'Config',
							id: 'api/Class/yue/Config',
						},
						{
							type: 'doc',
							label: 'Options',
							id: 'api/Class/yue/Config/Options',
						},
					],
				},
			]
		},
	],
	exampleSidebar: [{type: 'autogenerated', dirName: 'example'}],
	creativeSidebar: [{type: 'autogenerated', dirName: 'creative'}],
	// But you can create a sidebar manually
	/*
	tutorialSidebar: [
		'intro',
		'hello',
		{
			type: 'category',
			label: 'Tutorial',
			items: ['tutorial-basics/create-a-document'],
		},
	],
	*/
};

module.exports = sidebars;
