local Node = require("Node").Type
local Object = require("Object").Type
local Camera = require("Camera").Type
local Texture2D = require("Texture2D").Type
local Color = require("Color").Type

-- A RenderTarget is a buffer that allows you to render a Node into a texture.
local record RenderTarget

	-- Inherits from `Object`.
	embed Object

	-- The width of the rendering target.
	const width: integer

	-- The height of the rendering target.
	const height: integer

	-- The texture generated by the rendering target.
	const texture: Texture2D

	-- The camera used for rendering the scene.
	camera: Camera

	-- Renders a node to the target without replacing its previous contents.
	-- @param target (Node) The node to be rendered onto the render target.
	render: function(self: RenderTarget, target: Node)

	-- Clears the previous color, depth and stencil values on the render target.
	-- @param color (Color) The clear color used to clear the render target.
	-- @param depth (number) [optional] The value used to clear the depth buffer of the render target. Default is 1.
	-- @param stencil (number) [optional] The value used to clear the stencil buffer of the render target. Default is 0.
	renderWithClear: function(
		self: RenderTarget,
		color: Color,
		depth?: number --[[1]],
		stencil?: number --[[0]]
	)

	-- Renders a node to the target after clearing the previous color, depth and stencil values on it.
	-- @param target (Node) The node to be rendered onto the render target.
	-- @param color (Color) The clear color used to clear the render target.
	-- @param depth (number) [optional] The value used to clear the depth buffer of the render target. Default is 1.
	-- @param stencil (number) [optional] The value used to clear the stencil buffer of the render target. Default is 0.
	renderWithClear: function(
		self: RenderTarget,
		target: Node,
		color: Color,
		depth?: number --[[1]],
		stencil?: integer --[[0]]
	)

	-- Saves the contents of the render target to a PNG file asynchronously.
	-- @param filename (string) The name of the file to save the contents to.
	saveAsync: function(self: RenderTarget, filename: string)
end

-- A class for creating RenderTarget objects.
local record RenderTargetClass
	type Type = RenderTarget

	-- Creates a new RenderTarget object with the given width and height.
	-- @param width (integer) The width of the render target.
	-- @param height (integer) The height of the render target.
	-- @return (RenderTarget) The created render target.
	metamethod __call: function(self: RenderTargetClass, width: integer, height: integer): RenderTarget
end

local renderTargetClass: RenderTargetClass
return renderTargetClass
