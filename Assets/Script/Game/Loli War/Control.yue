--[[ Copyright (c) 2024 Li Jin, dragon-fly@qq.com

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ]]

_ENV = Dora Dora.Platformer
import "UI.Control.HPWheel"
import "UI.View.LeftTouchPad"
import "UI.View.RightTouchPad"
import "UI.View.RestartPad"
import "UI.Control.StartPanel"

store: Store = Data
:GroupPlayer = Store

playerGroup = Group ["hero", "unit"]
updatePlayerControl = (key, flag) ->
	playerGroup\each => @unit.data[key] = flag if @group == GroupPlayer

with root = AlignNode true
	\css 'flex-direction: column; justify-content: space-between'
	\addChild with AlignNode!
		\css 'width: 10; height: 10; margin-top: 50; margin-left: 60'
		\addChild HPWheel!
	\addChild with AlignNode!
		\css 'margin: 0, 10, 40; height: 104; flex-direction: row; justify-content: space-between'
		switch App.platform
			when "iOS", "Android"
				\addChild with AlignNode!
					\css 'height: 104; width: 0'
					\addChild with LeftTouchPad!
						\slot "KeyLeftUp", -> updatePlayerControl "keyLeft", false
						\slot "KeyLeftDown", -> updatePlayerControl "keyLeft", true
						\slot "KeyRightUp", -> updatePlayerControl "keyRight", false
						\slot "KeyRightDown", -> updatePlayerControl "keyRight", true
				\addChild with AlignNode!
					\css 'height: 104; width: 0'
					\addChild with RightTouchPad!
						\slot "KeyFUp", -> updatePlayerControl "keyF", false
						\slot "KeyFDown", -> updatePlayerControl "keyF", true
						\slot "KeyUpUp", -> updatePlayerControl "keyUp", false
						\slot "KeyUpDown", -> updatePlayerControl "keyUp", true
			when "macOS", "Windows", "Linux"
				\addChild with Node!
					\schedule ->
						updatePlayerControl "keyLeft", Keyboard\isKeyPressed "A"
						updatePlayerControl "keyRight", Keyboard\isKeyPressed "D"
						updatePlayerControl "keyUp", Keyboard\isKeyPressed "K"
						updatePlayerControl "keyF", Keyboard\isKeyPressed "J"
	.controllerEnabled = true
	updateButton = (id, buttonName, down) ->
		return unless id == 0
		switch buttonName
			when 'dpleft' then updatePlayerControl "keyLeft", down
			when 'dpright' then updatePlayerControl "keyRight", down
			when 'b' then updatePlayerControl "keyUp", down
			when 'a' then updatePlayerControl "keyF", down
	\slot "ButtonDown", (id, buttonName) -> updateButton id, buttonName, true
	\slot "ButtonUp", (id, buttonName) -> updateButton id, buttonName, false
	showStartPanel = ->
		Director.ui\addChild with AlignNode true
			\css 'align-items: center; justify-content: center'
			\addChild with align = AlignNode!
				\css 'width: 80%; height: 80%'
				\addChild with StartPanel!
					align\slot "AlignLayout", (w, h) ->
						.position = Vec2 w / 2, h / 2
						.scaleX = .scaleY = math.min w / .node.width, h / .node.height
	\addChild with RestartPad!
		root\slot "AlignLayout", (w, h) ->
			.position = Vec2 w - 10, h - 10
		\slot "Tapped", ->
			Store.winner = -1
			showStartPanel!
	\addTo Director.ui
	showStartPanel!
