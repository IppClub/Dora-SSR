_ENV = Dora

sprite = with Sprite "Image/logo.png"
	.scaleX = .scaleY = 0.5
	.showDebug = true

with Node!
	.touchEnabled = true
	\slot "TapMoved", (touch) ->
		return unless touch.first
		sprite.position += touch.delta
	\addChild sprite

-- example codes ends here, test ui codes below --

import "ImGuiEnum" as {:$WindowFlag}
windowFlags = $WindowFlag(NoResize, NoSavedSettings)
threadLoop ->
	const :width = App.visualSize
	ImGui.SetNextWindowPos Vec2(width - 10, 10), "FirstUseEver", Vec2 1,0
	ImGui.SetNextWindowSize Vec2(240, 520), "FirstUseEver"
	ImGui.Begin "Sprite", windowFlags, ->
		ImGui.Text "Sprite (Yuescript)"
		ImGui.BeginChild "SpriteSetting", Vec2(-1, -40), ->
			:z = sprite
			if changed, z := ImGui.DragFloat "Z", z, 1, -1000, 1000, "%.2f"
				sprite.z = z
			:x, :y = sprite.anchor
			if changed, x, y := ImGui.DragFloat2 "Anchor", x, y, 0.01, 0, 1, "%.2f"
				sprite.anchor = Vec2 x, y
			width: spriteW, :height = sprite.size
			if changed, spriteW, height := ImGui.DragFloat2 "Size", spriteW, height, 1, 0, 1500, "%.f"
				sprite.size = Size spriteW, height
			:scaleX, :scaleY = sprite
			if changed, scaleX, scaleY := ImGui.DragFloat2 "Scale", scaleX, scaleY, 0.01, -2, 2, "%.2f"
				sprite.scaleX, sprite.scaleY = scaleX, scaleY
			ImGui.PushItemWidth -60, ->
				:angle = sprite
				if changed, angle := ImGui.DragInt "Angle", math.floor(angle), 1, -360, 360
					sprite.angle = angle
			ImGui.PushItemWidth -60, ->
				:angleX = sprite
				if changed, angleX := ImGui.DragInt "AngleX", math.floor(angleX), 1, -360, 360
					sprite.angleX = angleX
			ImGui.PushItemWidth -60, ->
				:angleY = sprite
				if changed, angleY := ImGui.DragInt "AngleY", math.floor(angleY), 1, -360, 360
					sprite.angleY = angleY
			:skewX, :skewY = sprite
			if changed, skewX, skewY := ImGui.DragInt2 "Skew", math.floor(skewX), math.floor(skewY), 1, -360, 360
				sprite.skewX, sprite.skewY = skewX, skewY
			ImGui.PushItemWidth -70, ->
				:opacity = sprite
				if changed, opacity := ImGui.DragFloat "Opacity", opacity, 0.01, 0, 1, "%.2f"
					sprite.opacity = opacity
			ImGui.PushItemWidth -1, ->
				:color3 = sprite
				ImGui.SetColorEditOptions ["DisplayRGB",]
				if ImGui.ColorEdit3 "", color3
					sprite.color3 = color3
		if ImGui.Button "Reset", Vec2 140, 30
			with sprite.parent
				\removeChild sprite
				sprite = with Sprite "Image/logo.png"
					.scaleX = .scaleY = 0.5
					.showDebug = true
				\addChild sprite
